name: CD

on:
  push:
    branches:
    - stg
    - prd

env:
  workingDirectory: ${{ github.ref_name == 'prd' && './terraform/prd' || './terraform/stg'}} # else block is stg, that's ok because only stg and prd trigger the workflow

jobs:

  path-filter:
    name: Setup Path Filter
    runs-on: ubuntu-latest
    outputs:
      terraform: ${{ steps.filter.outputs.terraform }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3
      id: filter
      with:
        base: ${{ github.ref }}
        filters: | # purposefully exclude README and LICENSE
          terraform:
            - 'terraform/**'
            - '.github/workflows/**'

  terraform-apply:
    name: 'Terraform Apply'
    needs: [path-filter]
    if: ${{ needs.path-filter.outputs.terraform == 'true'}}
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:

    # configure credentials
    - name: Configure AWS Credentials (stg)
      if: ${{ github.ref_name == 'stg' }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-west-1
        role-to-assume: ${{ secrets.IAM_ROLE_ARN_STG }}
        role-session-name: gha-session
        

    - name: Configure AWS Credentials (prd)
      if: ${{ github.ref_name == 'prd' }}
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: us-west-1
        role-to-assume: ${{ secrets.IAM_ROLE_ARN_PRD }}
        role-session-name: gha-session

    # checkout the repo
    - name: Checkout
      uses: actions/checkout@v4

    # install terraform
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_wrapper: false

    # run terraform
    - name: Terraform Init
      working-directory: ${{ env.workingDirectory }}
      run: terraform init

    - name: Terraform Format
      working-directory: ${{ env.workingDirectory }}
      run: terraform fmt -recursive -check

    - name: Terraform Plan
      working-directory: ${{ env.workingDirectory }}
      run: terraform plan -out tfplan

    - name: Terraform Apply
      working-directory: ${{ env.workingDirectory }}
      run: terraform apply tfplan
